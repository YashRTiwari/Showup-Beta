[{"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\index.js":"1","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\App.js":"2","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\sidebar\\Sidebar.js":"3","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\roomCard\\RoomCard.js":"4","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\cueCards\\CueCards.js":"5","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\tags\\Tag.js":"6","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\eventDetails\\EventDetail.js":"7","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\createCueCards\\CreateCueCard.js":"8","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\home\\Home.js":"9","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\availableRooms\\AvailableRooms.js":"10","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\dummyData\\Data.js":"11","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\header\\Header.js":"12","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\yourRooms\\UserRooms.js":"13","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\createRooms\\CreateRoom.js":"14","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\joinRoom\\JoinRoom.js":"15","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\jitsiRoom\\useJitsi.js":"16","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\jitsiRoom\\JitsiRoom.js":"17","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\roomDetail\\RoomDetail.js":"18","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\index.js":"19","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\addRoomDetailsReducer.js":"20","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\roomDetailReducer.js":"21","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\actions\\index.js":"22","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\tempRoomDetailReducer.js":"23","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\roomListReducer.js":"24"},{"size":506,"mtime":1611301522079,"results":"25","hashOfConfig":"26"},{"size":551,"mtime":1611642263318,"results":"27","hashOfConfig":"26"},{"size":516,"mtime":1611455066587,"results":"28","hashOfConfig":"26"},{"size":1203,"mtime":1611671585536,"results":"29","hashOfConfig":"26"},{"size":1492,"mtime":1611669281001,"results":"30","hashOfConfig":"26"},{"size":429,"mtime":1611644110999,"results":"31","hashOfConfig":"26"},{"size":6930,"mtime":1611666939530,"results":"32","hashOfConfig":"26"},{"size":2531,"mtime":1611659106019,"results":"33","hashOfConfig":"26"},{"size":1104,"mtime":1611667641422,"results":"34","hashOfConfig":"26"},{"size":1376,"mtime":1611670946729,"results":"35","hashOfConfig":"26"},{"size":6227,"mtime":1611666441831,"results":"36","hashOfConfig":"26"},{"size":229,"mtime":1611455232228,"results":"37","hashOfConfig":"26"},{"size":1374,"mtime":1611667872879,"results":"38","hashOfConfig":"26"},{"size":4787,"mtime":1611671515974,"results":"39","hashOfConfig":"26"},{"size":1291,"mtime":1611671483435,"results":"40","hashOfConfig":"26"},{"size":2188,"mtime":1611497124321,"results":"41","hashOfConfig":"26"},{"size":1579,"mtime":1611670496903,"results":"42","hashOfConfig":"26"},{"size":1090,"mtime":1611669372916,"results":"43","hashOfConfig":"26"},{"size":479,"mtime":1611662516859,"results":"44","hashOfConfig":"26"},{"size":427,"mtime":1611642272874,"results":"45","hashOfConfig":"26"},{"size":447,"mtime":1611666666136,"results":"46","hashOfConfig":"26"},{"size":2012,"mtime":1611666658264,"results":"47","hashOfConfig":"26"},{"size":2896,"mtime":1611665688799,"results":"48","hashOfConfig":"26"},{"size":2188,"mtime":1611671599537,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ru01zv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\index.js",[],["108","109"],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\App.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\sidebar\\Sidebar.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\roomCard\\RoomCard.js",["110","111"],"import React from 'react'\r\nimport './RoomCard.css'\r\nimport { Button } from '@material-ui/core';\r\nimport {Link, useParams} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function RoomCard({roomData, index}) {\r\n\r\n\r\n    const simplifiedRoomData = {\r\n        title : trimTitle(roomData.title),\r\n        desc : trimDescription(roomData.desc)  ,\r\n    }\r\n\r\n    function trimTitle(title) {\r\n        if(title.length >= 40 ){\r\n            return(title.substring(0, 40)+\" ...\");\r\n        } else \r\n            return(title);\r\n    }\r\n\r\n    function trimDescription(desc) {\r\n        if(desc.length > 100 ){\r\n            return(desc.substring(0, 100)+\"...\");\r\n        } else \r\n            return(desc);\r\n    }\r\n\r\n    return (\r\n        <div className=\"RoomCard\">\r\n            <img className=\"room-img\" src={roomData.img} norepeat/>\r\n            <div className=\"room-name\">{simplifiedRoomData.title}</div>\r\n            <div className=\"room-desc\">{simplifiedRoomData.desc}</div>\r\n            <div className=\"room-fun\">\r\n                \r\n                <Link to={`/join-room/${index}/${roomData.title}`}><Button variant=\"contained\" color=\"secondary\">Join</Button></Link>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\cueCards\\CueCards.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\tags\\Tag.js",[],["112","113"],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\eventDetails\\EventDetail.js",["114","115","116","117","118"],"import { Button, TextField } from '@material-ui/core'\r\nimport React, { useRef } from 'react'\r\nimport './EventDetail.css'\r\nimport Tag from '../tags/Tag'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport {updateTempRoomDetails, \r\n    addTagToTempRoomDetail,\r\n    addTitleToTempRoomDetail,\r\n    addDescToTempRoomDetail,\r\n    addStartDateToTempRoomDetail,\r\n    addEndDateToTempRoomDetail,\r\n    addNOPToTempRoomDetail\r\n} from '../../actions'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nfunction EventDetail({\r\n    readOnly, \r\n}) {\r\n\r\n    const titleRef = useRef(null);    \r\n    const descRef = useRef(null);\r\n    const tagRef = useRef(null);\r\n    const numOfParticipantsRef = useRef(null);    \r\n    const startDateRef = useRef(null);    \r\n    const endDateRef = useRef(null);\r\n\r\n    const params = useParams()\r\n    \r\n    const eventData = useSelector(state => readOnly ? state.roomListReducer[params.index] : state.tempRoomDetailReducer) \r\n    console.log(eventData);\r\n    const dispatch = useDispatch();\r\n    const userTags = []\r\n\r\n    // const moveToCueCards = () => {\r\n       \r\n    //     const title = titleRef.current.value;\r\n    //     const desc = descRef.current.value;\r\n    //     const startDate = startDateRef.current.value\r\n    //     const endDate = endDate.current.value;\r\n    //     const numOfParticipants = numOfParticipantsRef.current.value;\r\n    //     dispatch(updateTempRoomDetails(\r\n    //         titleRef.current.value,\r\n    //         descRef.current.value,\r\n    //         startDateRef.current.value,\r\n    //         endDateRef.current.value,\r\n    //         numOfParticipantsRef.current.value,\r\n    //     ))\r\n    //     if(title.length > 0 && \r\n    //         desc.length > 0 &&\r\n    //         startDate.length > 0 &&\r\n    //         endDate.length > 0 &&\r\n    //         numOfParticipants > 0\r\n    //         ){\r\n    //         // handleGoToCueCards()\r\n    //     }\r\n    // }\r\n\r\n    const handleTitleChange = (e) => {\r\n        dispatch(addTitleToTempRoomDetail(e.target.value))\r\n    }\r\n\r\n\r\n    const handleDescChange = (e) => {\r\n        dispatch(addDescToTempRoomDetail(e.target.value))\r\n    }\r\n\r\n    \r\n    const handleStartDateChange = (e) => {\r\n        dispatch(addStartDateToTempRoomDetail(e.target.value))\r\n    }\r\n\r\n    \r\n    const handleEndDateChange = (e) => {\r\n        dispatch(addEndDateToTempRoomDetail(e.target.value))\r\n    }\r\n\r\n\r\n    \r\n    const handleNOPChange = (e) => {\r\n        dispatch(addNOPToTempRoomDetail(e.target.value))\r\n    }\r\n\r\n    const keyPress = (e) => {\r\n        if(e.keyCode == 13){\r\n            dispatch(addTagToTempRoomDetail(tagRef.current.value))\r\n            tagRef.current.value = ''\r\n        }\r\n     }\r\n\r\n    return (\r\n        <div className=\"EventDetail\">\r\n            \r\n            <img className=\"event-image\" src={eventData && eventData.img}/>\r\n\r\n            <div className=\"event-info\">\r\n\r\n                <TextField \r\n                    className=\"event-input\" \r\n                    defaultValue={eventData && eventData.title} \r\n                    label=\"Title\"\r\n                    variant=\"outlined\"\r\n                    inputRef={titleRef}\r\n                    onChange={handleTitleChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                        }} \r\n                    InputProps={{\r\n                        readOnly: readOnly \r\n                    }} />\r\n\r\n                <TextField className=\"event-input\" \r\n                    multiline\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }} \r\n                    onChange={handleDescChange}\r\n\r\n                    inputRef={descRef}\r\n                    InputProps={{\r\n                        readOnly: readOnly \r\n                    }}\r\n                    label=\"Description\"\r\n                    defaultValue={eventData && eventData.desc} \r\n                    variant=\"outlined\" />\r\n\r\n                {\r\n                    !readOnly \r\n                    \r\n                    &&  \r\n                    \r\n                    <TextField className=\"event-tag-header\" \r\n                    label=\"Tags\" variant=\"outlined\"\r\n                    inputRef={tagRef} InputLabelProps={{ shrink: true, }} \r\n                    onKeyDown={keyPress}\r\n                    InputProps={{ readOnly: readOnly  }} \r\n                     />\r\n                }\r\n\r\n                <div className=\"event-tags\">\r\n                    { eventData && eventData.tags && eventData.tags.map((item, index) => {\r\n                        return(<Tag tag={item[\"name\"]} readOnly={readOnly}/>)\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"event-dates\">\r\n                    <TextField\r\n                        className=\"event-datetime\"\r\n                        label=\"Start Date\"\r\n                        type=\"datetime-local\"\r\n                        onChange={handleStartDateChange}\r\n                        defaultValue={eventData && eventData.startDate}\r\n                        inputRef={startDateRef}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }} \r\n                        InputProps={{\r\n                            readOnly: readOnly \r\n                        }}\r\n                    />\r\n\r\n                    <h4 className=\"to\">to</h4>\r\n\r\n                    <TextField \r\n                        className=\"event-datetime\"\r\n                        label=\"End Date\"\r\n                        type=\"datetime-local\"\r\n                        onChange={handleEndDateChange}\r\n                        inputRef={endDateRef}\r\n                        defaultValue={eventData && eventData.endDate}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: readOnly \r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <TextField\r\n                        className=\"event-n-part\"\r\n                        label=\"Number of participants\"\r\n                        defaultValue={eventData && eventData.numOfParticipants}\r\n                        onChange={handleNOPChange}\r\n                        inputRef={numOfParticipantsRef}\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: readOnly \r\n                        }}/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        \r\n            {/* <button onClick={moveToCueCards}>Add Cue</button> */}\r\n            {/* <Link to='/create-room/add-cue-cards'><button onClick={moveToCueCards}>Add Cue</button></Link>  */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EventDetail;","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\createCueCards\\CreateCueCard.js",["119"],"import {React, useState, useRef} from 'react'\r\nimport './CreateCueCard.css';\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport CueCard from '../cueCards/CueCards.js';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport {addCueCardsToTempRoomDetail, removeCueCardsToTempRoomDetail} from '../../actions/'\r\n\r\n\r\nexport default function CreateCueCard({readOnly}) {\r\n\r\n    const titleRef = useRef(null)\r\n    const descRef = useRef(null)\r\n\r\n    const cues = useSelector(state => readOnly ? state.roomDetailReducer.cueCards : state.tempRoomDetailReducer.cueCards) \r\n    const dispatch = useDispatch();\r\n\r\n    const addCueCard = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // let newCues = Array({\r\n        //     \"title\" : titleRef.current.value,\r\n        //     \"desc\" : descRef.current.value\r\n        // })\r\n\r\n        dispatch(addCueCardsToTempRoomDetail(titleRef.current.value, descRef.current.value))\r\n        \r\n        // if(cues){\r\n        //     newCues = newCues.concat(cues)\r\n        // }\r\n        // setCues(newCues)\r\n        // console.log(cues)\r\n    }\r\n\r\n    const handleDelete = (itemToRemove) => {\r\n        dispatch(removeCueCardsToTempRoomDetail(itemToRemove))\r\n        // console.log(itemToRemove)\r\n        // const newList = cues.filter((item) => item !== itemToRemove);\r\n        // setCues(newList)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"CreateCueCard\">\r\n            <h3>Cue Cards</h3>\r\n                <form  onSubmit={addCueCard}  className=\"add-cue-cards\">\r\n                    <TextField \r\n                        label=\"Title\"\r\n                        variant=\"outlined\"\r\n                        inputRef={titleRef}\r\n                        />\r\n\r\n                    <TextField className=\"add-cue-input\" \r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        inputRef={descRef}\r\n                        />\r\n\r\n                    <Button \r\n                        type=\"submit\"\r\n                        className=\"add-cue-btn\"\r\n                        variant=\"contained\" color=\"primary\" >\r\n                        Add\r\n                    </Button>\r\n                </form>\r\n                    \r\n\r\n            <div className=\"add-cue-list\">\r\n                {\r\n                    cues && cues.map((item, index) => {\r\n                        return(<CueCard  key={index} data={item} handleDelete={handleDelete}/>);\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\home\\Home.js",["120"],"import React from 'react'\r\nimport Sidebar from '../../components/sidebar/Sidebar.js';\r\nimport  './Home.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport AvailableRooms from '../availableRooms/AvailableRooms.js';\r\nimport UserRooms from '../yourRooms/UserRooms.js';\r\nimport CreateRoom from '../createRooms/CreateRoom.js';\r\nimport JoinRoom from '../joinRoom/JoinRoom.js';\r\nimport RoomDetail from '../roomDetail/RoomDetail.js';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <Sidebar />\r\n            <div className=\"home-content\">\r\n                <Switch>\r\n                    <Route path=\"/rooms\"><AvailableRooms /></Route>\r\n                    <Route path=\"/user-rooms\"><UserRooms /></Route>\r\n                    <Route path=\"/create-room\"><CreateRoom/></Route>\r\n                    <Route path=\"/join-room/:index/:title\"><JoinRoom/></Route>\r\n                    <Route path=\"/room-detail/:index/:title\"><RoomDetail/></Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\availableRooms\\AvailableRooms.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\dummyData\\Data.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\header\\Header.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\yourRooms\\UserRooms.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\createRooms\\CreateRoom.js",["121"],"import React from 'react'\r\nimport './CreateRoom.css'\r\nimport {\r\n    Link,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch, useHistory\r\n  } from \"react-router-dom\";\r\nimport EventDetail from '../../components/eventDetails/EventDetail.js';\r\nimport CreateCueCard from '../../components/createCueCards/CreateCueCard.js'\r\nimport { Button, Divider } from '@material-ui/core';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport {addUserRoom} from '../../actions'\r\n\r\n\r\n\r\nfunction CreateRoom() {\r\n\r\n    let { path, url } = useRouteMatch();\r\n    let history = useHistory();\r\n\r\n    const state = useSelector(state => state.tempRoomDetailReducer);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    function goBack(){\r\n        console.log(\"Called\")\r\n        history.push(\"/user-rooms\");\r\n    }\r\n\r\n    function goToCueCards() {\r\n        console.log(\"Called\")\r\n\r\n        history.push(`${path}/add-cue-cards`);\r\n    }\r\n\r\n    function goToRoomDetails() {\r\n        console.log(\"Called\")\r\n\r\n        history.push(`${path}/`);\r\n    }\r\n\r\n    function goToInviteParticipants() {\r\n        console.log(\"Called\")\r\n        history.push(`${path}/invite-participants`);\r\n    }\r\n\r\n    function addRoomToDb() {\r\n        history.push(\"/user-rooms\")\r\n        dispatch(addUserRoom(state))\r\n    }\r\n\r\n    return (\r\n            <div className=\"CreateRoom\">\r\n\r\n                <Switch>\r\n                    <Route exact path={`${path}/`}>\r\n                            <div className=\"creat-room-header\">\r\n                                <h1>Create Room : 1 of 3</h1>\r\n                                <div>\r\n                                    <Button className=\"create-room-btn\" onClick={goBack} color=\"default\" variant=\"outlined\">Cancel</Button>\r\n                                    <Button className=\"create-room-btn next\" type=\"button\" onClick={goToCueCards} color=\"secondary\" variant=\"contained\">Next</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"create-room-navigator\">\r\n                                    <Link to={`${path}/`}><div className=\"create-room-links\">Create Room</div></Link>\r\n                                    <Divider width=\"200px\"/>\r\n\r\n                                    <div className=\"create-room-links\">Cue Cards</div>\r\n                                    <Divider width=\"200px\"/>\r\n                                    <div className=\"create-room-links\">Invite Participants</div>\r\n                            </div>\r\n                        <EventDetail readOnly={false}/>\r\n                    </Route>\r\n\r\n                    <Route path={`${path}/add-cue-cards`} >\r\n                        \r\n                            <div className=\"creat-room-header\">\r\n                                <h1>Create Room : 2 of 3</h1>\r\n                                <div>\r\n                                    <Button className=\"create-room-btn\" color=\"default\" onClick={goToRoomDetails} variant=\"outlined\">Back</Button>\r\n                                    <Button className=\"create-room-btn next\" onClick={goToInviteParticipants} color=\"secondary\" variant=\"contained\">Next</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"create-room-navigator\">\r\n                                    <Link to={`${path}/`}><div className=\"create-room-links\">Create Room</div></Link>\r\n                                    <Divider width=\"200px\"/>\r\n                                    <Link to={`${path}/add-cue-cards`}><div className=\"create-room-links\">Cue Cards</div></Link>\r\n                                    <Divider width=\"200px\"/>\r\n                                    <div className=\"create-room-links\">Invite Participants</div>\r\n                            </div>\r\n                        \r\n                        <CreateCueCard />\r\n\r\n                    </Route>\r\n\r\n                    <Route path={`${path}/invite-participants`} >\r\n\r\n                            <div className=\"creat-room-header\">\r\n                                <h1>Create Room : 3 of 3</h1>\r\n                                <div>\r\n                                    <Button className=\"create-room-btn\" color=\"default\" onClick={goToCueCards} variant=\"outlined\">Back</Button>\r\n                                    <Button className=\"create-room-btn next\" color=\"secondary\" onClick={addRoomToDb} variant=\"contained\">Finish</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"user-avail\">\r\n                                No users available\r\n                            </div>\r\n\r\n                    </Route>\r\n\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CreateRoom;","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\joinRoom\\JoinRoom.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\jitsiRoom\\useJitsi.js",["122"],"import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useJitsi = ({\r\n  domain = 'meet.showups.live',\r\n  parentNode,\r\n  subject = 'HelloWorld',\r\n  password,\r\n  displayName = 'Yash Tiwari',\r\n  onMeetingEnd,\r\n  ...options\r\n}) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [jitsi, setJitsi] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!window.JitsiMeetExternalAPI) {\r\n      setError('JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded')\r\n      return\r\n    }\r\n\r\n    options.parentNode = document.getElementById(parentNode)\r\n    if (!options.parentNode) {\r\n      setError(`Parent node is not available, check container have the correct id: \"${parentNode}\"`)\r\n      return\r\n    }\r\n\r\n    const client = new window.JitsiMeetExternalAPI(domain, {...options})\r\n    setJitsi(client)\r\n    setLoading(false)\r\n    setError(null)\r\n\r\n    subject && client.executeCommand('subject', subject)\r\n\r\n    client.addEventListener('videoConferenceJoined', () => {\r\n      password && client.executeCommand('password', password)\r\n      displayName && client.executeCommand('displayName', displayName)\r\n    })\r\n\r\n    client.addEventListener('passwordRequired', () => {\r\n      password && client.executeCommand('password', password)\r\n    })\r\n    onMeetingEnd && client.addEventListener('readyToClose', onMeetingEnd)\r\n\r\n    return () => jitsi && jitsi.dispose()\r\n  }, [window.JitsiMeetExternalAPI])\r\n\r\n  return {jitsi, error, loading}\r\n}\r\n\r\nuseJitsi.propTypes = {\r\n  options: PropTypes.shape({\r\n    domain: PropTypes.string,\r\n    roomName: PropTypes.string.isRequired,\r\n    subject: PropTypes.string,\r\n    password: PropTypes.string,\r\n    displayName: PropTypes.string,\r\n    onMeetingEnd: PropTypes.func,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n    parentNode: PropTypes.string,\r\n    configOverwrite: PropTypes.object,\r\n    interfaceConfigOverwrite: PropTypes.object,\r\n    noSSL: PropTypes.bool,\r\n    jwt: PropTypes.string,\r\n    onload: PropTypes.func,\r\n    invitees: PropTypes.array,\r\n    devices: PropTypes.object,\r\n    userInfo: PropTypes.object\r\n  })\r\n}\r\n\r\nexport default useJitsi","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\components\\jitsiRoom\\JitsiRoom.js",["123","124"],"import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport useJitsi from './useJitsi'\r\n\r\nconst JitsiRoom = ({\r\n  loadingComponent,\r\n  errorComponent,\r\n  containerStyles,\r\n  jitsiContainerStyles,\r\n  onError,\r\n  onJitsi,\r\n  ...options\r\n}) => {\r\n\r\n  const {loading, error, jitsi} = useJitsi({\r\n    parentNode: 'jitsi-container',\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (jitsi && onJitsi) onJitsi(jitsi)\r\n  }, [jitsi])\r\n\r\n  useEffect(() => {\r\n    if (error && onError) onError(error)\r\n  }, [error])\r\n\r\n  return (\r\n    <div style={{ ...{ width: '80%', height: '100%'}, ...containerStyles }}>\r\n      {error && (errorComponent || <p>{error}</p>)}\r\n      {!error && loading && (loadingComponent || <p>Loading ...</p>)}\r\n      <div\r\n        id='jitsi-container'\r\n        style={{ ...{\r\n          display: loading ? 'none' : 'block',\r\n          width: '100%',\r\n          height: '100%'\r\n        },\r\n        ...jitsiContainerStyles }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nJitsiRoom.propTypes = {\r\n  jwt: PropTypes.string,\r\n  domain: PropTypes.string,\r\n  subject: PropTypes.string,\r\n  password: PropTypes.string,\r\n  roomName: PropTypes.string.isRequired,\r\n  displayName: PropTypes.string,\r\n  onMeetingEnd: PropTypes.func,\r\n  loadingComponent: PropTypes.object,\r\n  errorComponent: PropTypes.object,\r\n  containerStyles: PropTypes.object,\r\n  jitsiContainerStyles: PropTypes.object,\r\n  configOverwrite: PropTypes.object,\r\n  interfaceConfigOverwrite: PropTypes.object,\r\n  onError: PropTypes.func,\r\n  onJitsi: PropTypes.func\r\n}\r\n\r\nexport { JitsiRoom , useJitsi }","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\pages\\roomDetail\\RoomDetail.js",["125","126","127"],"import React from 'react'\r\nimport EventDetail from '../../components/eventDetails/EventDetail'\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {liveRoomData} from '../../dummyData/Data.js';\r\nimport  {getRoomData} from '../../actions'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport './RoomDetails.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nexport default function RoomDetail() {\r\n\r\n    const params = useParams();\r\n    console.log(params)\r\n    const dispath = useDispatch();\r\n   \r\n    // const liveRoomData = useSelector(state => state.roomListReducer)\r\n\r\n    const eventDetail = useSelector(state => state.roomListReducer[params.index])\r\n\r\n    return (\r\n        <div className=\"RoomDetail\">\r\n            \r\n            <div className=\"room-detail-header\">\r\n                <h1>Room :  {eventDetail.title}</h1>\r\n                <Link to={`/join-room/${params.index}/${params.title}`}><Button variant=\"contained\" color=\"secondary\">Join Now</Button></Link>\r\n            </div>\r\n            <EventDetail readOnly={true} />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\index.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\addRoomDetailsReducer.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\roomDetailReducer.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\actions\\index.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\tempRoomDetailReducer.js",[],"C:\\Yash\\Showup\\colorfulconnections\\showup-beta\\src\\reducers\\roomListReducer.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":4,"column":15,"nodeType":"134","messageId":"135","endLine":4,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":32,"column":13,"nodeType":"138","endLine":32,"endColumn":68},{"ruleId":"128","replacedBy":"139"},{"ruleId":"130","replacedBy":"140"},{"ruleId":"132","severity":1,"message":"141","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":16},{"ruleId":"132","severity":1,"message":"142","line":6,"column":9,"nodeType":"134","messageId":"135","endLine":6,"endColumn":30},{"ruleId":"132","severity":1,"message":"143","line":33,"column":11,"nodeType":"134","messageId":"135","endLine":33,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":85,"column":22,"nodeType":"146","messageId":"147","endLine":85,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":94,"column":13,"nodeType":"138","endLine":94,"endColumn":76},{"ruleId":"132","severity":1,"message":"148","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":24},{"ruleId":"132","severity":1,"message":"149","line":5,"column":22,"nodeType":"134","messageId":"135","endLine":5,"endColumn":28},{"ruleId":"132","severity":1,"message":"150","line":19,"column":17,"nodeType":"134","messageId":"135","endLine":19,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":47,"column":6,"nodeType":"153","endLine":47,"endColumn":35,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":22,"column":6,"nodeType":"153","endLine":22,"endColumn":13,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"157","line":26,"column":6,"nodeType":"153","endLine":26,"endColumn":13,"suggestions":"158"},{"ruleId":"132","severity":1,"message":"159","line":4,"column":9,"nodeType":"134","messageId":"135","endLine":4,"endColumn":21},{"ruleId":"132","severity":1,"message":"160","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":21},{"ruleId":"132","severity":1,"message":"161","line":17,"column":11,"nodeType":"134","messageId":"135","endLine":17,"endColumn":18},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["162"],["163"],"'Button' is defined but never used.","'updateTempRoomDetails' is defined but never used.","'userTags' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Router' is defined but never used.","'url' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayName', 'domain', 'jitsi', 'onMeetingEnd', 'options', 'parentNode', 'password', and 'subject'. Either include them or remove the dependency array. Outer scope values like 'window.JitsiMeetExternalAPI' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["164"],"React Hook useEffect has a missing dependency: 'onJitsi'. Either include it or remove the dependency array. If 'onJitsi' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"React Hook useEffect has a missing dependency: 'onError'. Either include it or remove the dependency array. If 'onError' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"'liveRoomData' is defined but never used.","'getRoomData' is defined but never used.","'dispath' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [displayName, domain, jitsi, onMeetingEnd, options, parentNode, password, subject]",{"range":"173","text":"174"},"Update the dependencies array to be: [jitsi, onJitsi]",{"range":"175","text":"176"},"Update the dependencies array to be: [error, onError]",{"range":"177","text":"178"},[1481,1510],"[displayName, domain, jitsi, onMeetingEnd, options, parentNode, password, subject]",[445,452],"[jitsi, onJitsi]",[525,532],"[error, onError]"]